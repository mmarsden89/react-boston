{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/layout-components.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/images/favicon.ico","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Text","styled","p","_templateObject","borderRadius","bottom","color","flex","fontSize","fontWeight","height","left","overflow","position","right","space","textAlign","textStyle","top","width","Object","assign","Box","withComponent","_templateObject2","alignItems","boxShadow","display","flexDirection","gridColumn","gridGap","gridRow","gridTemplateColumns","gridTemplateRows","justifyContent","maxHeight","maxWidth","zIndex","Title","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","link","rel","type","href","favicon","name","content","property","author","concat","length","join","defaultProps","arrayOf","Header","siteTitle","react_default","style","background","marginBottom","margin","padding","gatsby_browser_entry","to","textDecoration","StyledFooter","Footer","Layout","Fragment","header","paddingTop","footer","_755544856","node"],"mappings":"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","file":"component---src-pages-404-js-325aa749190b48949fb4.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import styled from \"@emotion/styled\"\nimport {\n  alignItems,\n  borderRadius,\n  bottom,\n  boxShadow,\n  color,\n  display,\n  flex,\n  flexDirection,\n  fontSize,\n  fontWeight,\n  gridColumn,\n  gridGap,\n  gridRow,\n  gridTemplateColumns,\n  gridTemplateRows,\n  height,\n  justifyContent,\n  left,\n  maxHeight,\n  maxWidth,\n  overflow,\n  position,\n  right,\n  space,\n  textAlign,\n  textStyle,\n  top,\n  width,\n  zIndex,\n} from \"styled-system\"\n\nexport const Text = styled.p`\n  ${borderRadius}\n  ${bottom}\n  ${color}\n  ${flex}\n  ${fontSize}\n  ${fontWeight}\n  ${height}\n  ${left}\n  ${overflow}\n  ${position}\n  ${right}\n  ${space}\n  ${textAlign}\n  ${textStyle}\n  ${top}\n  ${width}\n`\n\nText.propTypes = {\n  ...borderRadius.propTypes,\n  ...bottom.propTypes,\n  ...color.propTypes,\n  ...flex.propTypes,\n  ...fontSize.propTypes,\n  ...fontWeight.propTypes,\n  ...height.propTypes,\n  ...left.propTypes,\n  ...overflow.propTypes,\n  ...position.propTypes,\n  ...right.propTypes,\n  ...space.propTypes,\n  ...textAlign.propTypes,\n  ...textStyle.propTypes,\n  ...top.propTypes,\n  ...width.propTypes,\n}\n\nexport const Box = styled(Text.withComponent(\"div\"))`\n  ${alignItems}\n  ${boxShadow}\n  ${display}\n  ${flexDirection}\n  ${gridColumn}\n  ${gridGap}\n  ${gridRow}\n  ${gridTemplateColumns}\n  ${gridTemplateRows}\n  ${justifyContent}\n  ${maxHeight}\n  ${maxWidth}\n  ${zIndex}\n`\n\nBox.propTypes = {\n  ...alignItems.propTypes,\n  ...boxShadow.propTypes,\n  ...display.propTypes,\n  ...flexDirection.propTypes,\n  ...gridColumn.propTypes,\n  ...gridGap.propTypes,\n  ...gridRow.propTypes,\n  ...gridTemplateColumns.propTypes,\n  ...gridTemplateRows.propTypes,\n  ...justifyContent.propTypes,\n  ...maxHeight.propTypes,\n  ...maxWidth.propTypes,\n  ...zIndex.propTypes,\n}\n\nexport const Title = Text.withComponent(\"h1\")\n\nexport const SectionTitle = Text.withComponent(\"h2\")\n\nexport const InlineText = Text.withComponent(\"span\")\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport favicon from \"../images/favicon.ico\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      link={[\n        { rel: \"shortcut icon\", type: \"image/x-icon\", href: `${favicon}` },\n      ]}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","module.exports = __webpack_public_path__ + \"static/favicon-ab1f1665723ab007dd6b0fe5ac3f4e95.ico\";","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { Box } from \"./layout-components\"\n\nconst StyledFooter = Box.withComponent(\"footer\")\n\nconst Footer = () => (\n  <StyledFooter\n    display=\"grid\"\n    gridTemplateColumns=\"1fr 1fr 1fr\"\n    gridGap=\"4px\"\n    textAlign=\"center\"\n    alignItems=\"center\"\n  >\n    <Link href=\"http://confcodeofconduct.com/\">Code of Conduct</Link>\n    <Link href=\"https://twitter.com/ReactBoston\">ReactBoston on Twitter</Link>\n    <Link href=\"https://meetup.com/ReactJS-Boston/\">ReactJS Boston Meetup</Link>\n  </StyledFooter>\n)\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"../global-styles/base-reset.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <Footer />\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}